name: 强制同步:最上游到auto-pull分支[备份,由deepseek创建]

on:
  # schedule:
    # 每天 北京时间 08:00 (UTC 00:00)运行一次
    # 备用：04:00 (UTC 20:00)，08:00 (UTC 00:00)，12:00 (UTC 04:00)
    # - cron: '0 0 * * *'
  workflow_dispatch:     # 允许手动触发

jobs:
  sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write

    steps:
      # STEP 1: 检出目标分支
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: 'auto-pull'  # 指定目标分支
          fetch-depth: 0  # 获取完整历史

      # STEP 2: 添加最上游远程
      - name: Add topstream remote
        run: |
          git remote remove topstream || true  # 确保没有重复添加
          # 添加最上游远程仓库
          git remote add topstream https://github.com/LmeSzinc/AzurLaneAutoScript.git
          git fetch topstream

      # STEP 3: 尝试合并
      - name: Try to merge changes
        id: merge
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@users.noreply.github.com"
          
          # 尝试合并
          if git merge topstream/master --allow-unrelated-histories -m "Merge topstream updates"; then
            echo "status=success" >> $GITHUB_OUTPUT
          else
            # 检测真实冲突
            if [ -n "$(git status --porcelain)" ]; then
              echo "::error::Merge conflict detected!"
              exit 1
            else
              echo "status=no-changes" >> $GITHUB_OUTPUT
            fi
          fi

      # STEP 4: 推送到目标分支
      - name: Push changes
        if: steps.merge.outputs.status == 'success'
        run: |
          echo "推送更新到 auto-pull 分支"
          git push origin auto-pull

      # STEP 5: 冲突处理
      - name: Create issue on conflict
        if: ${{ failure() && steps.merge.conclusion == 'failure' }}
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: "⚠️ auto-pull 分支存在合并冲突",
              body: `auto-pull 分支自动合并失败！需要手动解决冲突：\n\n` +
                    `上游仓库: ${process.env.TOPSTREAM_REPO}\n` +
                    `目标分支: ${process.env.TARGET_BRANCH}\n\n` +
                    `工作流运行: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}`
            })

      # STEP 6: 成功通知
      - name: Success notification
        if: steps.merge.outputs.status == 'success'
        run: |
          echo "✅ 成功合并上游更新到 auto-pull 分支"